name: Build and Deploy

on:
  push:
    branches:
      - master

env:
  MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
  MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXT_PUBLIC_HOME_URL: ${{ secrets.NEXT_PUBLIC_HOME_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  MAILER_TRANSPORT: ${{ secrets.MAILER_TRANSPORT }}
  MAILER_USERNAME: ${{ secrets.MAILER_USERNAME }}
  MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}


jobs:
  build-app:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


#      - name: Set up Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 18

#      - name: Install dependencies
#        run: npm ci --legacy-peer-deps

#      - name: Build Next.js app
#        run: npm run build


  build-docker:
    needs: build-app

    runs-on: self-hosted

    steps:
      - name: Log into Docker registry
        run: docker login -u muhammadusama7 -p ${{ secrets.DOCKER_LOGIN_PASSWORD }}

      - name: Build Docker image
        run: |
          pwd
          docker build \
            --build-arg DATABASE_URL=$DATABASE_URL \
            --build-arg NEXTAUTH_URL=$NEXTAUTH_URL \
            --build-arg NEXT_PUBLIC_HOME_URL=$NEXT_PUBLIC_HOME_URL \
            --build-arg NEXTAUTH_SECRET=$NEXTAUTH_SECRET \
            -t muhammadusama7/cscfinder:latest .

#          docker build --build-arg DATABASE_URL=$DATABASE_URL -t muhammadusama7/cscfinder:latest .
#          docker build --build-arg DATABASE_URL=$DATABASE_URL --build-arg NEXTAUTH_URL=$NEXTAUTH_URL --build-arg NEXT_PUBLIC_HOME_URL=$NEXT_PUBLIC_HOME_URL --build-arg NEXTAUTH_SECRET=$NEXTAUTH_SECRET -t muhammadusama7/cscfinder:latest .

  deploy:
    needs: build-docker

    runs-on: self-hosted

    steps:
      - name: Deploy to Ubuntu server
#        env:
#          MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
#          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
#          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
        env:
          MONGODB_CREDENTIALS: '{
            "username": "${{ secrets.MONGODB_USERNAME }}",
            "password": "${{ secrets.MONGODB_PASSWORD }}",
            "database": "${{ secrets.MONGODB_DATABASE }}"
          }'
        run: |
#          docker-compose up \
#            -e MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }} \
#            -e MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} \
#            -e MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }} \
#            -d

#          MONGODB_USERNAME=myadmin MONGODB_PASSWORD=myadmin MONGODB_DATABASE=mydb docker-compose up -d
#          docker-compose -f docker-compose.yml up -d
          MONGODB_USERNAME=$MONGODB_USERNAME MONGODB_PASSWORD=$MONGODB_PASSWORD MONGODB_DATABASE=$MONGODB_DATABASE docker-compose up -d


  push-docker:
    needs: deploy

    runs-on: self-hosted
    steps:
      - name: Push Docker image
        run: docker push muhammadusama7/cscfinder:latest
